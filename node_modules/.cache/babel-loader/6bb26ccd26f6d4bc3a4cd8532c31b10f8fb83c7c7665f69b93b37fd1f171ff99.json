{"ast":null,"code":"var _jsxFileName = \"/home/iddah/Development/code/code-challenges/Bot-Battlr-/src/component/Botcollection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Botspecs from \"./Botspecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Botcollection() {\n  _s();\n  const [bots, setBots] = useState([]);\n  useEffect(function () {\n    fetch(\"http://localhost:3000/bots\").then(response => response.json()).then(data => {\n      setBots(data);\n    });\n  }, []);\n  const botcards = bots.map(bot => /*#__PURE__*/_jsxDEV(Botspecs, {\n    className: \"collections\",\n    avatar_url: bot.avatar_url,\n    name: bot.name,\n    catchphrase: bot.catchphrase,\n    health: bot.health,\n    damage: bot.damage,\n    armor: bot.armor\n  }, bot.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 37\n  }, this));\n  return {\n    botcards\n  };\n}\n_s(Botcollection, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = Botcollection;\nexport default Botcollection;\nvar _c;\n$RefreshReg$(_c, \"Botcollection\");","map":{"version":3,"names":["useEffect","useState","Botspecs","Botcollection","bots","setBots","fetch","then","response","json","data","botcards","map","bot","avatar_url","name","catchphrase","health","damage","armor","id"],"sources":["/home/iddah/Development/code/code-challenges/Bot-Battlr-/src/component/Botcollection.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\nimport Botspecs from \"./Botspecs\";\n\nfunction Botcollection() {\n    const[bots, setBots] = useState([])\n\n    useEffect(function() {\n        fetch(\"http://localhost:3000/bots\").then((response)=>response.json()).then((data)=>{\n            setBots(data)\n            \n            \n        })\n    },[])\n    const botcards = bots.map(bot=>(<Botspecs className =\"collections\" \n        key = {bot.id}\n        avatar_url = {bot.avatar_url}\n        name ={bot.name}\n        catchphrase = {bot.catchphrase}\n        health = {bot.health} damage = {bot.damage} armor= {bot.armor}\n        />))\n    \n       return(\n       {botcards}\n       )\n       \n       \n     \n    \n    \n}\nexport default Botcollection"],"mappings":";;AAAA,SAASA,SAAS,EAACC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,SAASC,aAAa,GAAG;EAAA;EACrB,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEnCD,SAAS,CAAC,YAAW;IACjBM,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAGA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAG;MAC/EL,OAAO,CAACK,IAAI,CAAC;IAGjB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,GAAG,CAACC,GAAG,iBAAG,QAAC,QAAQ;IAAC,SAAS,EAAE,aAAa;IAE9D,UAAU,EAAIA,GAAG,CAACC,UAAW;IAC7B,IAAI,EAAGD,GAAG,CAACE,IAAK;IAChB,WAAW,EAAIF,GAAG,CAACG,WAAY;IAC/B,MAAM,EAAIH,GAAG,CAACI,MAAO;IAAC,MAAM,EAAIJ,GAAG,CAACK,MAAO;IAAC,KAAK,EAAGL,GAAG,CAACM;EAAM,GAJvDN,GAAG,CAACO,EAAE;IAAA;IAAA;IAAA;EAAA,QAKV,CAAC;EAEL,OACA;IAACT;EAAQ,CAAC;AAOjB;AAAC,GA1BQR,aAAa;AAAA,KAAbA,aAAa;AA2BtB,eAAeA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}